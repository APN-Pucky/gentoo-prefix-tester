name: "Gentoo Prefix stage tester"
branding:
  icon: "git-commit"
  color: "purple"
description: "Test a single stage of Gentoo Prefix"
inputs:
  VAGRANTFILE:
    description: "Vagrantfile to use. LOCAL for bare metal"
  STABLE:
    description: "STABLE or UNSTABLE"
    default: "STABLE"
  PSTAGE:
    description: "Previous stage to load from cache"
    default: "none"
  ISTAGE:
    description: "stage to run and save"
    default: "noninteractive"
  APIKEY:
    description: "Gentoo bugzilla API key"
    default: "REPLACE"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install pybugz
      shell: bash
      run: python -m pip install git+https://github.com/williamh/pybugz.git

    - name: Cache gentoo-prefix ${{ inputs.PSTAGE }}
      id: cache-pstage
      uses: actions/cache@v3
      with:
        path: gentoo-prefix-${{ inputs.PSTAGE }}
        key: ${{ runner.os }}-${{ inputs.VAGRANTFILE }}-${{ inputs.STABLE }}-${{ inputs.PSTAGE }}-${{ github.run_id }}
    - name: Cache gentoo-prefix ${{ inputs.ISTAGE }}
      id: cache-istage
      uses: actions/cache@v3
      with:
        path: gentoo-prefix-${{ inputs.ISTAGE }}
        key: ${{ runner.os }}-${{ inputs.VAGRANTFILE }}-${{ inputs.STABLE }}-${{ inputs.ISTAGE }}-${{ github.run_id }}
    - name: Print env etc. debug infos
      shell: bash
      run: printenv
    - name: run bootstrap
      shell: bash
      id: run
      run: unset PKG_CONFIG_PATH && unset LD_LIBRARY_PATH && unset DYLD_LIBRARY_PATH && ./run_v2.sh  ${{ inputs.VAGRANTFILE }} ${{ inputs.APIKEY }} ${{ inputs.STABLE }} "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" ${{ inputs.ISTAGE }}
      continue-on-error: true

    - name: Upload full.log
      uses: actions/upload-artifact@v4
      with:
        name: full_log_${{ inputs.ISTAGE }}
        path: full*

    - name: Upload build.log
      uses: actions/upload-artifact@v4
      with:
        name: build_log_${{ inputs.ISTAGE }}
        path: build*

    - name: Upload info.log
      uses: actions/upload-artifact@v4
      with:
        name: info_log_${{ inputs.ISTAGE }}
        path: info*

    - name: Check on failures
      shell: bash
      if: steps.run.outcome != 'success'
      run: exit 1
